import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

# Sample data
data = {
    'team1': [1, 2, 1, 2, 3, 3, 1, 2, 3],
    'team2': [2, 1, 3, 3, 1, 2, 3, 1, 2],
    'venue': [1, 1, 2, 2, 3, 3, 1, 2, 3],
    'team1_win': [0, 1, 1, 0, 0, 1, 1, 0, 1]
}

# Convert to DataFrame
df = pd.DataFrame(data)

# Features and target
X = df[['team1', 'team2', 'venue']]
y = df['team1_win']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train the model
model = LogisticRegression()
model.fit(X_train, y_train)

# Predict the outcomes for the test set
y_pred = model.predict(X_test)

# Calculate accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')

# Function to predict the winner
def predict_winner(team1, team2, venue):
    prediction = model.predict([[team1, team2, venue]])
    return 'Team 1 wins' if prediction == 1 else 'Team 2 wins'

# Predicting a match
print(predict_winner(1, 2, 1))  # Example prediction
